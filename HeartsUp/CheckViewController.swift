//
//  CheckViewController.swift
//  HeartsUp
//
//  Created by Elijah Smith on 1/13/17.
//  Copyright Â© 2017 HeartsUp. All rights reserved.
//

import UIKit
import MessageUI
/*import Foundation
import CoreLocation*/

let defaults = UserDefaults.standard

class CheckViewController: UIViewController, MFMessageComposeViewControllerDelegate/*, CLLocationManagerDelegate*/ {
    
    @IBOutlet weak var buttonDisabled: UIButton!
    @IBOutlet weak var switch1: UISwitch!
    @IBOutlet weak var switch2: UISwitch!
    @IBOutlet weak var switch3: UISwitch!
    @IBOutlet weak var switch4: UISwitch!
    @IBOutlet weak var switch5: UISwitch!
    
    //let locationManager = CLLocationManager()
    let age = defaults.double(forKey: "age")
    let sex = defaults.double(forKey: "isMale")
    let bloodPressure = defaults.double(forKey: "restingBP")
    
    func check() {
        let chestPain = defaults.double(forKey: "chestPain")
        let chestPainExercise = defaults.double(forKey: "chestPainExercise")
        let addition = (((age / 100) * 0.2) + sex + (1.5 * ((chestPain - 1) / 3)) + (0.1 * ((bloodPressure - 80) / 120)) + (2.4 * chestPainExercise)) / 5.2
        print(addition)
        if addition >= 0.3 {
            buttonDisabled.isEnabled = true
        }
        else {
            buttonDisabled.isEnabled = false
        }
    }
    
    /*func locationManager(manager: CLLocationManager, didUpdateLocations locations:[CLLocation]) {
        let locValue:CLLocationCoordinate2D = (manager.location?.coordinate)!
        print("locations = \(locValue.latitude) \(locValue.longitude)")
    }*/
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        switch2.isEnabled = false
        switch3.isEnabled = false
        check()
        /*self.locationManager.requestAlwaysAuthorization()
        self.locationManager.requestWhenInUseAuthorization()
        
        if CLLocationManager.locationServicesEnabled() {
            locationManager.delegate = self
            locationManager.desiredAccuracy = kCLLocationAccuracyNearestTenMeters
            locationManager.startUpdatingLocation()
        }*/
        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    @IBAction func asymptomaticSwitch1(_ sender: UISwitch) {
        if sender.isOn == true {
            switch2.isEnabled = true
            switch3.isEnabled = true
            defaults.set(2, forKey: "chestPain")
            check()
        }
        else {
            switch2.isEnabled = false
            switch3.isEnabled = false
            defaults.set(1, forKey: "chestPain")
            check()
        }
    }
    
    @IBAction func atypicalAnginaSwitch2(_ sender: UISwitch) {
        if sender.isOn == true {
            switch3.isEnabled = false
            defaults.set(3, forKey: "chestPain")
            check()
        }
        else {
            switch3.isEnabled = true
            defaults.set(2, forKey: "chestPain")
            check()
        }
    }

    @IBAction func nonAnginalSwitch3(_ sender: UISwitch) {
        if sender.isOn == true {
            switch2.isEnabled = false
            defaults.set(4, forKey: "chestPain")
            check()
        }
        else {
            switch2.isEnabled = true
            defaults.set(2, forKey: "chestPain")
            check()
        }
    }
    
    @IBAction func chestPainExerciseSwitch4(_ sender: UISwitch) {
        if sender.isOn == true {
            defaults.set(1, forKey: "chestPainExercise")
            check()
        }
        else {
            defaults.set(0, forKey: "chestPainExercise")
            check()
        }
    }
    
    @IBAction func emotionSwitch5(_ sender: UISwitch) {
        if sender.isOn == true {
            defaults.set(1, forKey: "emotionalVolatility")
            check()
        }
        else {
            defaults.set(0, forKey: "emotionalVolatility")
            check()
        }
    }
    
    @IBAction func backButton(_ sender: Any) {
        defaults.set(1, forKey: "chestPain")
        defaults.set(0, forKey: "chestPainExercise")
        defaults.set(0, forKey: "emotionalVolatility")
    }
    
    
    @IBAction func textMessageGenerator(_ sender: Any) {
        //locationManager
        if (MFMessageComposeViewController.canSendText()) {
            let controller = MFMessageComposeViewController()
            controller.body = "ALERT: I am having a heart attack, please send help! (Message autogenerated by HeartsUp.)"
            controller.recipients = [defaults.string(forKey: "firstEmergencyContact")!, defaults.string(forKey: "secondEmergencyContact")!, defaults.string(forKey: "thirdEmergencyContact")!]
            controller.messageComposeDelegate = self
            self.present(controller, animated: true, completion: nil)
        }
    }
    
    func messageComposeViewController(_ controller: MFMessageComposeViewController, didFinishWith result: MessageComposeResult) {
        self.dismiss(animated: true, completion: nil)
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        self.navigationController?.isNavigationBarHidden = true
    }
    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */
}
